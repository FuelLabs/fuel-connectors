export const predicate = {
  abi: {
    encoding: '1',
    types: [
      {
        typeId: 0,
        type: 'b256',
        components: null,
        typeParameters: null,
      },
      {
        typeId: 1,
        type: 'bool',
        components: null,
        typeParameters: null,
      },
      {
        typeId: 2,
        type: 'u64',
        components: null,
        typeParameters: null,
      },
    ],
    functions: [
      {
        inputs: [
          {
            name: 'witness_index',
            type: 2,
            typeArguments: null,
          },
        ],
        name: 'main',
        output: {
          name: '',
          type: 1,
          typeArguments: null,
        },
        attributes: null,
      },
    ],
    loggedTypes: [],
    messagesTypes: [],
    configurables: [
      {
        name: 'SIGNER',
        configurableType: {
          name: '',
          type: 0,
          typeArguments: null,
        },
        offset: 2416,
      },
    ],
  },
  bytecode: base64ToUint8Array(
    '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',
  ),
};

function base64ToUint8Array(base64: string) {
  const binaryString = atob(base64);
  const bytes = new Uint8Array(binaryString.length);
  for (let i = 0; i < binaryString.length; i++) {
    bytes[i] = binaryString.charCodeAt(i);
  }
  return bytes;
}
