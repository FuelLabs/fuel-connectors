/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.3
  Forc version: 0.63.3
  Fuel-Core version: 0.34.0
*/

import {
  BN,
  type BigNumberish,
  InputValue,
  Predicate,
  type PredicateParams,
  Provider,
  decompressBytecode,
} from 'fuels';

export type VerificationPredicateConfigurables = Partial<{
  SIGNER: string;
}>;

export type VerificationPredicateInputs = [witness_index: BigNumberish];

export type VerificationPredicateParameters = Omit<
  PredicateParams<
    VerificationPredicateInputs,
    VerificationPredicateConfigurables
  >,
  'abi' | 'bytecode'
>;

const abi = {
  programType: 'predicate',
  specVersion: '1',
  encodingVersion: '1',
  concreteTypes: [
    {
      type: 'b256',
      concreteTypeId:
        '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
    },
    {
      type: 'bool',
      concreteTypeId:
        'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
    },
    {
      type: 'u64',
      concreteTypeId:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
    },
  ],
  metadataTypes: [],
  functions: [
    {
      inputs: [
        {
          name: 'witness_index',
          concreteTypeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
      name: 'main',
      output:
        'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
      attributes: null,
    },
  ],
  loggedTypes: [],
  messagesTypes: [],
  configurables: [
    {
      name: 'SIGNER',
      concreteTypeId:
        '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
      offset: 3352,
    },
  ],
};

const bytecode = decompressBytecode(
  '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',
);

export class VerificationPredicate extends Predicate<
  VerificationPredicateInputs,
  VerificationPredicateConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: VerificationPredicateParameters) {
    super({ abi, bytecode, ...params });
  }
}
